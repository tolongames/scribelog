// .eslintrc.json
{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended" // Integruje Prettier z ESLint
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "env": {
    "node": true,
    "jest": true // Informuje ESLint o globalnych zmiennych Jest
  },
  "rules": {
    // Tutaj można dodać własne reguły lub nadpisać istniejące
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }] // Ostrzegaj o nieużywanych zmiennych (chyba że zaczynają się od _)
    // Nie wyłączamy 'no-explicit-any' globalnie
  },
  "overrides": [
    {
      // Stosuj te reguły tylko do plików pasujących do wzorca testowego
      "files": ["test/**/*.ts", "*.test.ts", "*.spec.ts"],
      // Wyłącz regułę 'no-explicit-any' dla plików testowych
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    },
    // --- POCZĄTEK DODANEGO BLOKU ---
    {
      // Stosuj te reguły tylko do plików pasujących do wzorca src
      "files": [
        "src/**/*.ts",
        "src/transports/mongodb.ts",
        "src/transports/websocket.ts"
      ],
      // Wyłącz regułę 'no-explicit-any' dla plików źródłowych
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    }
    // --- KONIEC DODANEGO BLOKU ---
  ]
}
